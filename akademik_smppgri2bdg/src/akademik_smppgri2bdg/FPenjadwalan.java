/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * FPenjadwalan.java
 *
 * Created on 08 Jul 13, 11:24:53
 */

package akademik_smppgri2bdg;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author syadam
 */
public class FPenjadwalan extends javax.swing.JFrame {
    public DefaultTableModel tabModel;
    public DefaultTableModel tabModel2;
    Connection conn;
   
    /** Creates new form FPenjadwalan */
    public FPenjadwalan() {
        initComponents();
        setJTable();
        setJTable2();

        
    }


    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        TMatPel = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        PanelDataSiswa = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        CBHari = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        CBJamMasuk = new javax.swing.JComboBox();
        jLabel14 = new javax.swing.JLabel();
        txtJamTengah = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtKodeMatpel = new javax.swing.JTextField();
        txtNamaMatpel = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtNamaGuru = new javax.swing.JTextField();
        CBKelas = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        txtJamKeluar = new javax.swing.JTextField();
        BCariGuru = new javax.swing.JButton();
        PanelButtonGuru = new javax.swing.JPanel();
        BEdit = new javax.swing.JButton();
        BSimpan = new javax.swing.JButton();
        BHapus = new javax.swing.JButton();
        BBatal = new javax.swing.JButton();
        BKeluar = new javax.swing.JButton();
        BCekJadwal = new javax.swing.JButton();
        BTambah = new javax.swing.JButton();
        PanelTabelGuru = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TJadwal = new javax.swing.JTable();
        PanelPencarianGuru = new javax.swing.JPanel();
        jLabel29 = new javax.swing.JLabel();
        CBCariJadwal = new javax.swing.JComboBox();
        txtCariJadwal = new javax.swing.JTextField();
        BCariJadwal = new javax.swing.JButton();

        jLabel9.setText("Daftar Mata Pelajaran");

        TMatPel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(TMatPel);

        jButton2.setText("Batal");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Pilih");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDialog1Layout.createSequentialGroup()
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2))
                    .addComponent(jLabel9)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 425, Short.MAX_VALUE))
                .addContainerGap())
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 226, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton2))
                .addContainerGap())
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel2.setText("PENJADWALAN");

        PanelDataSiswa.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N
        PanelDataSiswa.setEnabled(false);

        jLabel6.setText("Hari");

        CBHari.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--Pilih--", "Senin", "Selasa", "Rabu", "Kamis", "Jumat", "Sabtu" }));
        CBHari.setEnabled(false);
        CBHari.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                CBHariItemStateChanged(evt);
            }
        });

        jLabel8.setText("Jam Masuk");

        CBJamMasuk.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--Pilih--", "07.00", "08.00", "09.00", "11.00", "12.00" }));
        CBJamMasuk.setEnabled(false);
        CBJamMasuk.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                CBJamMasukItemStateChanged(evt);
            }
        });

        jLabel14.setText("Jam Tengah");

        txtJamTengah.setEnabled(false);
        txtJamTengah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtJamTengahActionPerformed(evt);
            }
        });

        jLabel3.setText("Kode Mata Pelajaran");

        txtKodeMatpel.setEnabled(false);
        txtKodeMatpel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtKodeMatpelActionPerformed(evt);
            }
        });
        txtKodeMatpel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtKodeMatpelKeyPressed(evt);
            }
        });

        txtNamaMatpel.setEnabled(false);
        txtNamaMatpel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNamaMatpelActionPerformed(evt);
            }
        });

        jLabel4.setText("Mata Pelajaran");

        jLabel5.setText("Guru");

        txtNamaGuru.setEnabled(false);
        txtNamaGuru.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNamaGuruActionPerformed(evt);
            }
        });

        CBKelas.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--Pilih--", "X 1", "X 2", "X 3", "X 4", "X 5" }));
        CBKelas.setEnabled(false);
        CBKelas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CBKelasActionPerformed(evt);
            }
        });

        jLabel7.setText("Kelas");

        jLabel15.setText("Jam Keluar");

        txtJamKeluar.setEnabled(false);
        txtJamKeluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtJamKeluarActionPerformed(evt);
            }
        });

        BCariGuru.setText("Cari");
        BCariGuru.setEnabled(false);
        BCariGuru.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BCariGuruActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelDataSiswaLayout = new javax.swing.GroupLayout(PanelDataSiswa);
        PanelDataSiswa.setLayout(PanelDataSiswaLayout);
        PanelDataSiswaLayout.setHorizontalGroup(
            PanelDataSiswaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelDataSiswaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelDataSiswaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5)
                    .addComponent(jLabel7)
                    .addComponent(jLabel14)
                    .addComponent(jLabel8)
                    .addComponent(jLabel6)
                    .addComponent(jLabel15))
                .addGap(18, 18, 18)
                .addGroup(PanelDataSiswaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtJamKeluar, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE)
                    .addComponent(CBJamMasuk, 0, 146, Short.MAX_VALUE)
                    .addComponent(txtNamaGuru, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE)
                    .addComponent(CBKelas, 0, 146, Short.MAX_VALUE)
                    .addComponent(txtNamaMatpel, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE)
                    .addComponent(txtJamTengah, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE)
                    .addComponent(CBHari, 0, 146, Short.MAX_VALUE)
                    .addGroup(PanelDataSiswaLayout.createSequentialGroup()
                        .addComponent(txtKodeMatpel, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BCariGuru, javax.swing.GroupLayout.DEFAULT_SIZE, 56, Short.MAX_VALUE)))
                .addContainerGap())
        );
        PanelDataSiswaLayout.setVerticalGroup(
            PanelDataSiswaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelDataSiswaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelDataSiswaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtKodeMatpel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BCariGuru))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelDataSiswaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtNamaMatpel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelDataSiswaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtNamaGuru, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelDataSiswaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(CBKelas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelDataSiswaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(CBHari, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelDataSiswaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(CBJamMasuk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelDataSiswaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(txtJamTengah, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(PanelDataSiswaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(txtJamKeluar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        PanelButtonGuru.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        PanelButtonGuru.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        BEdit.setText("Edit");
        BEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BEditActionPerformed(evt);
            }
        });
        PanelButtonGuru.add(BEdit, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 40, 80, -1));

        BSimpan.setText("Simpan");
        BSimpan.setEnabled(false);
        BSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BSimpanActionPerformed(evt);
            }
        });
        PanelButtonGuru.add(BSimpan, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 40, 80, -1));

        BHapus.setText("Hapus");
        BHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BHapusActionPerformed(evt);
            }
        });
        PanelButtonGuru.add(BHapus, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 80, -1));

        BBatal.setText("Batal");
        BBatal.setEnabled(false);
        BBatal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BBatalActionPerformed(evt);
            }
        });
        PanelButtonGuru.add(BBatal, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 70, 80, -1));

        BKeluar.setText("Keluar");
        BKeluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BKeluarActionPerformed(evt);
            }
        });
        PanelButtonGuru.add(BKeluar, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 70, 80, -1));

        BCekJadwal.setText("Cek Jadwal");
        BCekJadwal.setEnabled(false);
        BCekJadwal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BCekJadwalActionPerformed(evt);
            }
        });
        PanelButtonGuru.add(BCekJadwal, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 260, -1));

        BTambah.setText("Tambah");
        BTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTambahActionPerformed(evt);
            }
        });
        PanelButtonGuru.add(BTambah, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 80, -1));

        PanelTabelGuru.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "DATA TABEL JADWAL", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        TJadwal.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(TJadwal);

        javax.swing.GroupLayout PanelTabelGuruLayout = new javax.swing.GroupLayout(PanelTabelGuru);
        PanelTabelGuru.setLayout(PanelTabelGuruLayout);
        PanelTabelGuruLayout.setHorizontalGroup(
            PanelTabelGuruLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelTabelGuruLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 392, Short.MAX_VALUE)
                .addContainerGap())
        );
        PanelTabelGuruLayout.setVerticalGroup(
            PanelTabelGuruLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelTabelGuruLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 245, Short.MAX_VALUE)
                .addContainerGap())
        );

        PanelPencarianGuru.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel29.setText("Cari Berdasarkan");

        CBCariJadwal.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Kode Matpel", "Guru" }));

        BCariJadwal.setText("Cari");
        BCariJadwal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BCariJadwalActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelPencarianGuruLayout = new javax.swing.GroupLayout(PanelPencarianGuru);
        PanelPencarianGuru.setLayout(PanelPencarianGuruLayout);
        PanelPencarianGuruLayout.setHorizontalGroup(
            PanelPencarianGuruLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelPencarianGuruLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel29)
                .addGap(6, 6, 6)
                .addComponent(CBCariJadwal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtCariJadwal, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(BCariJadwal, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)
                .addContainerGap())
        );
        PanelPencarianGuruLayout.setVerticalGroup(
            PanelPencarianGuruLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelPencarianGuruLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(PanelPencarianGuruLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel29)
                    .addComponent(CBCariJadwal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCariJadwal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BCariJadwal))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(PanelButtonGuru, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(PanelDataSiswa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(PanelTabelGuru, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PanelPencarianGuru, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(291, 291, 291)
                        .addComponent(jLabel2)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(PanelTabelGuru, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(PanelPencarianGuru, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(PanelDataSiswa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(PanelButtonGuru, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CBHariItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_CBHariItemStateChanged
        // TODO add your handling code here:
}//GEN-LAST:event_CBHariItemStateChanged

    private void CBJamMasukItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_CBJamMasukItemStateChanged
        // TODO add your handling code here:
        if(CBJamMasuk.getSelectedItem().toString().equalsIgnoreCase("07.00"))
            {
                txtJamTengah.setText("07.30");
                txtJamKeluar.setText("08.00");
            }
        else if(CBJamMasuk.getSelectedItem().toString().equalsIgnoreCase("08.00"))
            {
                txtJamTengah.setText("08.30");
                txtJamKeluar.setText("09.00");
            }
        else if(CBJamMasuk.getSelectedItem().toString().equalsIgnoreCase("09.00"))
            {
                txtJamTengah.setText("09.30");
                txtJamKeluar.setText("10.00");
            }
        else if(CBJamMasuk.getSelectedItem().toString().equalsIgnoreCase("11.00"))
            {
                txtJamTengah.setText("11.30");
                txtJamKeluar.setText("12.00");
            }
        else if(CBJamMasuk.getSelectedItem().toString().equalsIgnoreCase("12.00"))
            {
                txtJamTengah.setText("12.30");
                txtJamKeluar.setText("01.00");
            }
}//GEN-LAST:event_CBJamMasukItemStateChanged

    private void BCekJadwalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BCekJadwalActionPerformed
        // TODO add your handling code here:
        if(txtKodeMatpel.getText().isEmpty() ||
           txtNamaGuru.getText().isEmpty() ||
           txtNamaGuru.getText().isEmpty() ||
           CBKelas.getSelectedItem().equals("--Pilih--") ||
           CBHari.getSelectedItem().equals("--Pilih--") ||
           CBJamMasuk.getSelectedItem().equals("--Pilih--") ||
           txtJamTengah.getText().isEmpty() ||
           txtJamKeluar.getText().isEmpty())
           {
            JOptionPane.showMessageDialog(this,"Data Tidak Lengkap!!");
           }
         else
           {
         try{
            Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
            conn=DriverManager.getConnection("jdbc:odbc:akademik_smppgri2bdg");
            String sql="select * from jadwal where kode_mata_pelajaran='"+txtKodeMatpel.getText()+"'";
            PreparedStatement st=conn.prepareStatement(sql);
            ResultSet rs=st.executeQuery();
            boolean cek = true;
            while(rs.next()){
                cek = false;
                String kode = rs.getString("kode_mata_pelajaran");
                String kelas = rs.getString("nama_kelas");
                String jamMasuk = rs.getString("jam_masuk");
                String hari = rs.getString("hari");

                String kodePilih = txtKodeMatpel.getText();
                String kelasPilih = CBKelas.getSelectedItem().toString();
                String hariPilih = CBHari.getSelectedItem().toString();
                String jamPilih = CBJamMasuk.getSelectedItem().toString();

                if (kodePilih.equals(kode) && kelasPilih.equals(kelas) && hariPilih.equals(hari) && jamPilih.equals(jamMasuk)) {
                    JOptionPane.showMessageDialog(this, "Jadwal Tidak Tersedia!");
                    BSimpan.setEnabled(false);
                } else
                  {
                    cekHari();
                  }
            }
            if(cek)
            {
                cekHari();
            }

        } catch (ClassNotFoundException cnfe) {
            System.out.println("Class Driver tidak ditemukan.. : " + cnfe);
            System.exit(0);
        } catch (SQLException sqle) {
            System.out.println("Proses Query Gagal = " + sqle);
            System.exit(0);
        } catch(Exception e){
            System.out.println("Koneksi Access Gagal " +e.getMessage());
            System.exit(0);
        }}
}//GEN-LAST:event_BCekJadwalActionPerformed

    private void txtKodeMatpelKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtKodeMatpelKeyPressed
        
        if(evt.getKeyCode()==10){
        try{
            Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
            conn=DriverManager.getConnection("jdbc:odbc:akademik_smppgri2bdg");
            String sql="select * from user where kode_mata_pelajaran='"+txtKodeMatpel.getText()+"'";
            PreparedStatement st=conn.prepareStatement(sql);
            ResultSet rs=st.executeQuery();
            int no=0+1;
            while(rs.next()){
                txtNamaMatpel.setText(rs.getString("nama_mata_pelajaran"));
                txtNamaGuru.setText(rs.getString("nama_guru"));
            }
            st.close();
            conn.close();
        } catch (ClassNotFoundException cnfe) {
            System.out.println("Class Driver tidak ditemukan.. : " + cnfe);
            System.exit(0);
        } catch (SQLException sqle) {
            System.out.println("Proses Query Gagal = " + sqle);
            System.exit(0);
        } catch(Exception e){
            System.out.println("Koneksi Access Gagal " +e.getMessage());
            System.exit(0);
        }
        }
}//GEN-LAST:event_txtKodeMatpelKeyPressed

    private void CBKelasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CBKelasActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_CBKelasActionPerformed

    private void txtKodeMatpelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtKodeMatpelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtKodeMatpelActionPerformed

    private void BEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BEditActionPerformed
        // TODO add your handling code here:
        txtKodeMatpel.setEnabled(false);
        txtNamaMatpel.setEnabled(false);
        txtNamaGuru.setEnabled(false);
        CBKelas.setEnabled(true);
        CBHari.setEnabled(true);
        CBJamMasuk.setEnabled(true);
        txtJamTengah.setEnabled(false);
        txtJamKeluar.setEnabled(false);
        
        BSimpan.setText("Update");

        BCariGuru.setEnabled(true);
        BCekJadwal.setEnabled(true);
        BTambah.setEnabled(false);
        BSimpan.setEnabled(true);
        BEdit.setEnabled(false);
        BBatal.setEnabled(true);
        BHapus.setEnabled(false);
        BKeluar.setEnabled(false);

        ambilData_dari_JTable();
}//GEN-LAST:event_BEditActionPerformed

    private void BSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BSimpanActionPerformed
        // TODO add your handling code here:
        if(txtKodeMatpel.getText().isEmpty() ||
           txtNamaGuru.getText().isEmpty() ||
           txtNamaGuru.getText().isEmpty() ||
           CBKelas.getSelectedItem().equals("--Pilih--") ||
           CBHari.getSelectedItem().equals("--Pilih--") ||
           CBJamMasuk.getSelectedItem().equals("--Pilih--") ||
           txtJamTengah.getText().isEmpty() ||
           txtJamKeluar.getText().isEmpty())
           {
            JOptionPane.showMessageDialog(this,"Data Tidak Lengkap!!");

           } else
             if(BSimpan.getText().equalsIgnoreCase("Simpan"))
                simpanData();
             else
                rubahData();

        txtKodeMatpel.setText("");
        txtNamaMatpel.setText("");
        txtNamaGuru.setText("");
        CBKelas.setSelectedItem("--Pilih--");
        CBHari.setSelectedItem("--Pilih--");
        CBJamMasuk.setSelectedItem("--Pilih--");
        txtJamTengah.setText("");
        txtJamKeluar.setText("");
        
        txtKodeMatpel.setEnabled(false);
        txtNamaMatpel.setEnabled(true);
        txtNamaGuru.setEnabled(true);
        CBKelas.setEnabled(true);
        CBHari.setEnabled(true);
        CBJamMasuk.setEnabled(true);
        txtJamTengah.setEnabled(false);
        txtJamKeluar.setEnabled(false);

        txtKodeMatpel.setEnabled(false);
        txtNamaMatpel.setEnabled(false);
        txtNamaGuru.setEnabled(false);
        CBKelas.setEnabled(false);
        CBHari.setEnabled(false);
        CBJamMasuk.setEnabled(false);
        txtJamTengah.setEnabled(false);
        txtJamKeluar.setEnabled(false);

        BCariGuru.setEnabled(false);
        BCekJadwal.setEnabled(false);
        BTambah.setEnabled(true);
        BSimpan.setEnabled(false);
        BEdit.setEnabled(true);
        BBatal.setEnabled(false);
        BHapus.setEnabled(true);
        BKeluar.setEnabled(true);
}//GEN-LAST:event_BSimpanActionPerformed

    private void BHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BHapusActionPerformed
        // TODO add your handling code here:
        hapus_Data();
}//GEN-LAST:event_BHapusActionPerformed

    private void BBatalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BBatalActionPerformed
        // TODO add your handling code here:
        txtKodeMatpel.setText("");
        txtNamaMatpel.setText("");
        txtNamaGuru.setText("");
        CBKelas.setSelectedItem("--Pilih--");
        CBHari.setSelectedItem("--Pilih--");
        CBJamMasuk.setSelectedItem("--Pilih--");
        txtJamTengah.setText("");
        txtJamKeluar.setText("");

        txtKodeMatpel.setEnabled(false);
        txtNamaMatpel.setEnabled(false);
        txtNamaGuru.setEnabled(false);
        CBKelas.setEnabled(false);
        CBHari.setEnabled(false);
        CBJamMasuk.setEnabled(false);
        txtJamTengah.setEnabled(false);
        txtJamKeluar.setEnabled(false);

        BCariGuru.setEnabled(false);
        BCekJadwal.setEnabled(false);
        BTambah.setEnabled(true);
        BSimpan.setEnabled(false);
        BEdit.setEnabled(true);
        BBatal.setEnabled(false);
        BHapus.setEnabled(true);
        BKeluar.setEnabled(true);
}//GEN-LAST:event_BBatalActionPerformed

    private void BKeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BKeluarActionPerformed
        // TODO add your handling code here:
        dispose();
}//GEN-LAST:event_BKeluarActionPerformed

    private void BCariJadwalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BCariJadwalActionPerformed
        // TODO add your handling code here:
        String sql;
        int pilih = CBCariJadwal.getSelectedIndex();
        String cari = txtCariJadwal.getText();
        try {
            conn.close();
            Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
            conn=DriverManager.getConnection("jdbc:odbc:akademik_smppgri2bdg");
            if(pilih==0)
                sql ="Select * from jadwal WHERE kode_mata_pelajaran ='" +txtCariJadwal.getText() + "'";
            else
                sql ="Select * from jadwal WHERE nama_guru Like '%" +txtCariJadwal.getText() + "%'";

            PreparedStatement st = conn.prepareStatement(sql);
            ResultSet rs =st.executeQuery();

            hapusIsiJTable();
            int no=0;
            while (rs.next()) {
                no++;
                String kode_mata_pelajaran = rs.getString("kode_mata_pelajaran");
                String nama_mata_pelajaran = rs.getString("nama_mata_pelajaran");
                String nama_guru = rs.getString("nama_guru");
                String nama_kelas = rs.getString("nama_kelas");
                String hari = rs.getString("hari");
                String jam_masuk = rs.getString("jam_masuk");
                String jam_tengah = rs.getString("jam_tengah");
                String jam_keluar = rs.getString("jam_keluar");

                
                Object [] data = {no,kode_mata_pelajaran,nama_mata_pelajaran,nama_guru,nama_kelas,
                                  hari,jam_masuk,jam_tengah,jam_keluar};
                tabModel.addRow(data);
            }

            if(tabModel.getRowCount()>0)
                JOptionPane.showMessageDialog(this,"Data Ditemukan ");
            else
                JOptionPane.showMessageDialog(this,"Data Tidak Ditemukan.. ");

        } catch (ClassNotFoundException se) {} catch (SQLException se) {}
}//GEN-LAST:event_BCariJadwalActionPerformed

    private void BTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTambahActionPerformed
        // TODO add your handling code here:
        txtKodeMatpel.setText("");
        txtNamaMatpel.setText("");
        txtNamaGuru.setText("");
        CBKelas.setSelectedItem("--Pilih--");
        CBHari.setSelectedItem("--Pilih--");
        CBJamMasuk.setSelectedItem("--Pilih--");
        txtKodeMatpel.setText("");
        txtKodeMatpel.setText("");

        txtKodeMatpel.setEnabled(false);
        txtNamaMatpel.setEnabled(false);
        txtNamaGuru.setEnabled(false);
        CBKelas.setEnabled(true);
        CBHari.setEnabled(true);
        CBJamMasuk.setEnabled(true);
        txtJamTengah.setEnabled(false);
        txtJamKeluar.setEnabled(false);

        BSimpan.setText("Simpan");

        BCariGuru.setEnabled(true);
        BCekJadwal.setEnabled(true);
        BTambah.setEnabled(false);
        BSimpan.setEnabled(false);
        BEdit.setEnabled(false);
        BBatal.setEnabled(true);
        BHapus.setEnabled(false);
        BKeluar.setEnabled(false);
}//GEN-LAST:event_BTambahActionPerformed

    private void txtNamaMatpelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNamaMatpelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNamaMatpelActionPerformed

    private void txtNamaGuruActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNamaGuruActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNamaGuruActionPerformed

    private void txtJamKeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtJamKeluarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtJamKeluarActionPerformed

    private void txtJamTengahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtJamTengahActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtJamTengahActionPerformed

    private void BCariGuruActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BCariGuruActionPerformed
        // TODO add your handling code here:
        jDialog1.setSize(473, 391);
        jDialog1.setModal(true);
        jDialog1.setLocationRelativeTo(this);
        jDialog1.setVisible(true);

    }//GEN-LAST:event_BCariGuruActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        if(TMatPel.getSelectedRow()==-1)
        {
           JOptionPane.showMessageDialog(this, "Silahkan Pilih Data Terlebih Dahulu");
        }
        else
        {
            int row=TMatPel.getSelectedRow();
            txtKodeMatpel.setText(TMatPel.getValueAt(row, 1).toString());
            txtNamaMatpel.setText(TMatPel.getValueAt(row, 2).toString());
            txtNamaGuru.setText(TMatPel.getValueAt(row, 3).toString());
            jDialog1.dispose();
        }


    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        jDialog1.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FPenjadwalan().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BBatal;
    private javax.swing.JButton BCariGuru;
    private javax.swing.JButton BCariJadwal;
    private javax.swing.JButton BCekJadwal;
    private javax.swing.JButton BEdit;
    private javax.swing.JButton BHapus;
    private javax.swing.JButton BKeluar;
    private javax.swing.JButton BSimpan;
    private javax.swing.JButton BTambah;
    private javax.swing.JComboBox CBCariJadwal;
    private javax.swing.JComboBox CBHari;
    private javax.swing.JComboBox CBJamMasuk;
    private javax.swing.JComboBox CBKelas;
    private javax.swing.JPanel PanelButtonGuru;
    private javax.swing.JPanel PanelDataSiswa;
    private javax.swing.JPanel PanelPencarianGuru;
    private javax.swing.JPanel PanelTabelGuru;
    private javax.swing.JTable TJadwal;
    private javax.swing.JTable TMatPel;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField txtCariJadwal;
    private javax.swing.JTextField txtJamKeluar;
    private javax.swing.JTextField txtJamTengah;
    private javax.swing.JTextField txtKodeMatpel;
    private javax.swing.JTextField txtNamaGuru;
    private javax.swing.JTextField txtNamaMatpel;
    // End of variables declaration//GEN-END:variables

         private void getData(){

  try{
        Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");

        conn=DriverManager.getConnection("jdbc:odbc:akademik_smppgri2bdg");

        String sql="Select * from jadwal";
        PreparedStatement st=conn.prepareStatement(sql);

        ResultSet rs=st.executeQuery();

        String kode_mata_pelajaran,nama_mata_pelajaran,nama_guru,nama_kelas,
               hari,jam_masuk,jam_tengah,jam_keluar;
        int no=0;
        while(rs.next()){
         no=no+1;
         kode_mata_pelajaran = rs.getString("kode_mata_pelajaran");
         nama_mata_pelajaran = rs.getString("nama_mata_pelajaran");
         nama_guru = rs.getString("nama_guru");
         nama_kelas = rs.getString("nama_kelas");
         hari = rs.getString("hari");
         jam_masuk = rs.getString("jam_masuk");
         jam_tengah = rs.getString("jam_tengah");
         jam_keluar = rs.getString("jam_keluar");
         Object [] Data = {no,kode_mata_pelajaran,nama_mata_pelajaran,nama_guru,nama_kelas,
                           hari,jam_masuk,jam_tengah,jam_keluar};
         tabModel.addRow(Data);
        }

          st.close();
          conn.close();
    }
    catch (ClassNotFoundException cnfe) {
           System.out.println("Class Driver tidak ditemukan.. : " + cnfe);
           System.exit(0);
    }
    catch (SQLException sqle) {
           System.out.println("Proses Query Gagal = " + sqle);
           System.exit(0);
    }
    catch(Exception e){
           System.out.println("Koneksi Access Gagal " +e.getMessage());
           System.exit(0);
    }

    }

private void setJTable(){
    String [] JudulKolom={"No","Kode Matpel","Nama Matpel","Nama Guru","Nama Kelas",
                           "Hari","Jam Masuk","Jam Tengah","Jam Keluar"};
    tabModel = new DefaultTableModel(null, JudulKolom){
                  boolean[] canEdit = new boolean [] { false, false, false, false, false,
                                                       false, false, false, false, false };
                  @Override
                  public boolean isCellEditable(int rowIndex, int columnIndex) {
                   return canEdit [columnIndex];
                  }
              };
    TJadwal.setModel(tabModel);
    TJadwal.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
    TJadwal.getColumnModel().getColumn(0).setPreferredWidth(30);
    TJadwal.getColumnModel().getColumn(1).setPreferredWidth(100);
    TJadwal.getColumnModel().getColumn(2).setPreferredWidth(100);
    TJadwal.getColumnModel().getColumn(3).setPreferredWidth(100);
    TJadwal.getColumnModel().getColumn(4).setPreferredWidth(100);
    TJadwal.getColumnModel().getColumn(5).setPreferredWidth(100);
    TJadwal.getColumnModel().getColumn(6).setPreferredWidth(100);
    TJadwal.getColumnModel().getColumn(7).setPreferredWidth(100);
    TJadwal.getColumnModel().getColumn(8).setPreferredWidth(100);
    
    getData();
}

void ambilData_dari_JTable() {
    int row = TJadwal.getSelectedRow();

    String kode_mata_pelajaran = tabModel.getValueAt(row, 1).toString();
    String nama_mata_pelajaran = tabModel.getValueAt(row, 2).toString();
    String nama_guru = tabModel.getValueAt(row, 3).toString();
    String nama_kelas = tabModel.getValueAt(row, 4).toString();
    String hari = tabModel.getValueAt(row, 5).toString();
    String jam_masuk = tabModel.getValueAt(row, 6).toString();
    String jam_tengah = tabModel.getValueAt(row, 7).toString();
    String jam_keluar = tabModel.getValueAt(row, 8).toString();
    
    txtKodeMatpel.setText(kode_mata_pelajaran);
    txtNamaMatpel.setText(nama_mata_pelajaran);
    txtNamaGuru.setText(nama_guru);
    CBKelas.setSelectedItem(nama_kelas);
    CBHari.setSelectedItem(hari);
    CBJamMasuk.setSelectedItem(jam_masuk);
    txtJamTengah.setText(jam_tengah);
    txtJamKeluar.setText(jam_keluar);

    }

public void hapusIsiJTable() {
    int row = tabModel.getRowCount();
    for (int i = 0; i < row; i++) {
      tabModel.removeRow(0);
    }
  }

public void tampilDataKeJTable() {
    hapusIsiJTable();
    try {
        conn.close();
        Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
        conn=DriverManager.getConnection("jdbc:odbc:akademik_smppgri2bdg");
        String sql="Select * from jadwal";
        PreparedStatement st=conn.prepareStatement(sql);
        ResultSet rs=st.executeQuery();
        String kode_mata_pelajaran,nama_mata_pelajaran,nama_guru,nama_kelas,
               hari,jam_masuk,jam_tengah,jam_keluar;
        int no=0;
        while(rs.next()){
         no=no+1;
         kode_mata_pelajaran = rs.getString("kode_mata_pelajaran");
         nama_mata_pelajaran = rs.getString("nama_mata_pelajaran");
         nama_guru = rs.getString("nama_guru");
         nama_kelas = rs.getString("nama_kelas");
         hari = rs.getString("hari");
         jam_masuk = rs.getString("jam_masuk");
         jam_tengah = rs.getString("jam_tengah");
         jam_keluar = rs.getString("jam_keluar");
         
         Object Data[]={no,kode_mata_pelajaran,nama_mata_pelajaran,nama_guru,nama_kelas,
                        hari,jam_masuk,jam_tengah,jam_keluar};
         tabModel.addRow(Data);
      }
  }
    catch (Exception e) {}
}

public void rubahData() {

    int ok = JOptionPane.showConfirmDialog(this,
        "Anda Yakin Ingin Mengubah Data\n Dengan Kode Mata Pelajaran = '" + txtKodeMatpel.getText() +
        "'", "Konfirmasi ",JOptionPane.YES_NO_OPTION);

    if (ok == 0) {
      try {
        Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
        conn=DriverManager.getConnection("jdbc:odbc:akademik_smppgri2bdg");
        String sql ="UPDATE jadwal SET nama_mata_pelajaran = ?,nama_guru = ?,nama_kelas = ?,hari = ?,jam_masuk = ?,jam_tengah = ?,jam_keluar = ? WHERE kode_mata_pelajaran = ?";
        PreparedStatement st = conn.prepareStatement(sql);
        try {
          st.setString(1, txtNamaMatpel.getText());
          st.setString(2, txtNamaGuru.getText());
          st.setString(3, String.valueOf(CBKelas.getSelectedItem()));
          st.setString(4, String.valueOf(CBHari.getSelectedItem()));
          st.setString(5, String.valueOf(CBJamMasuk.getSelectedItem()));
          st.setString(6, txtJamTengah.getText());
          st.setString(7, txtJamKeluar.getText());
          st.setString(8, txtKodeMatpel.getText());
          st.executeUpdate();

        tampilDataKeJTable();

        txtKodeMatpel.setText("");
        txtNamaMatpel.setText("");
        txtNamaGuru.setText("");
        CBKelas.setSelectedItem("");
        CBHari.setSelectedItem("");
        CBJamMasuk.setSelectedItem("");
        txtJamTengah.setText("");
        txtJamKeluar.setText("");

        } catch (SQLException se) { }
      } catch (ClassNotFoundException se) {}
      catch (SQLException se) {}
    }

  }

public void simpanData(){

     try{
            Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
            conn=DriverManager.getConnection("jdbc:odbc:akademik_smppgri2bdg");
            String sql="Insert into jadwal values(?,?,?,?,?,?,?,?)";
            PreparedStatement st=conn.prepareStatement(sql);
                st.setString(1, txtKodeMatpel.getText());
                st.setString(2, txtNamaMatpel.getText());
                st.setString(3, txtNamaGuru.getText());
                st.setString(4, String.valueOf(CBKelas.getSelectedItem()));
                st.setString(5, String.valueOf(CBHari.getSelectedItem()));
                st.setString(6, String.valueOf(CBJamMasuk.getSelectedItem()));
                st.setString(7, txtJamTengah.getText());
                st.setString(8, txtJamKeluar.getText());
                
            int rs=st.executeUpdate();

            if(rs>0){
            JOptionPane.showMessageDialog(this,"Input Berhasil");
      	    tampilDataKeJTable();
            }
            st.close();
            conn.close();
        }
        catch (ClassNotFoundException cnfe) {
           System.out.println("Class Driver tidak ditemukan.. : " + cnfe);
        }
        catch (SQLException sqle) {
           System.out.println("Input  Gagal = " + sqle.getMessage());
        }
        catch(Exception e){
           System.out.println("Koneksi Gagal " +e.getMessage());
        }
  }

public void hapus_Data() {
    ambilData_dari_JTable();
    int ok = JOptionPane.showConfirmDialog(this,
        "Anda Yakin Ingin Menghapus Data\nDengan Kode Mata Pelajaran = '" + txtKodeMatpel.getText() +
        "'", "Konfirmasi Menghapus Data",JOptionPane.YES_NO_OPTION);
    if (ok == 0) {
      try {
       Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
       conn=DriverManager.getConnection("jdbc:odbc:akademik_smppgri2bdg");
        String sql = "DELETE FROM jadwal WHERE kode_mata_pelajaran = ? and nama_kelas = ? and jam_masuk = ? and hari = ?";
        PreparedStatement st = conn.prepareStatement(sql);
        st.setString(1, txtKodeMatpel.getText());
        st.setString(2, CBKelas.getSelectedItem().toString());
        st.setString(3, CBJamMasuk.getSelectedItem().toString());
        st.setString(4, CBHari.getSelectedItem().toString());
        int rs=st.executeUpdate();
        if(rs>0){
        tampilDataKeJTable();
        JOptionPane.showMessageDialog(this,"Data Sudah dihapus");
        }
        txtKodeMatpel.setText("");
        txtNamaMatpel.setText("");
        txtNamaGuru.setText("");
        CBKelas.setSelectedItem("--Pilih--");
        CBHari.setSelectedItem("--Pilih--");
        CBJamMasuk.setSelectedItem("--Pilih--");
        txtJamTengah.setText("");
        txtJamKeluar.setText("");

      } catch (Exception se) {
         JOptionPane.showMessageDialog(this,"Gagal Hapus Data.. ");
       }
    }
  }

    private void cekHari() {
        try{
            String kodePilih = txtKodeMatpel.getText();
                String kelasPilih = CBKelas.getSelectedItem().toString();
                String hariPilih = CBHari.getSelectedItem().toString();
                String jamPilih = CBJamMasuk.getSelectedItem().toString();

            Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
            conn=DriverManager.getConnection("jdbc:odbc:akademik_smppgri2bdg");
            String sql="select * from jadwal where hari = ? and jam_masuk = ? and nama_kelas = ?";
            PreparedStatement st=conn.prepareStatement(sql);
            st.setString(1, hariPilih);
            st.setString(2, jamPilih);
            st.setString(3, kelasPilih);
            ResultSet rs=st.executeQuery();
            boolean cek = true;
            while(rs.next()){
                cek = false;
                JOptionPane.showMessageDialog(this, "Jadwal Tidak Tersedia!");
                BSimpan.setEnabled(false);
            }

            if(cek){
                cekkelas();
                
            }

        } catch (ClassNotFoundException cnfe) {
            System.out.println("Class Driver tidak ditemukan.. : " + cnfe);
            System.exit(0);
        } catch (SQLException sqle) {
            System.out.println("Proses Query Gagal = " + sqle);
            System.exit(0);
        } catch(Exception e){
            System.out.println("Koneksi Access Gagal " +e.getMessage());
            System.exit(0);
        }
    }

    private void cekkelas() {
    try{
            String kodePilih = txtKodeMatpel.getText();
                String kelasPilih = CBKelas.getSelectedItem().toString();
                String hariPilih = CBHari.getSelectedItem().toString();
                String jamPilih = CBJamMasuk.getSelectedItem().toString();

            Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
            conn=DriverManager.getConnection("jdbc:odbc:akademik_smppgri2bdg");
            String sql="select * from jadwal where hari = ? and jam_masuk = ? and kode_mata_pelajaran = ?";
            PreparedStatement st=conn.prepareStatement(sql);
            st.setString(1, hariPilih);
            st.setString(2, jamPilih);
            st.setString(3, kodePilih);
            ResultSet rs=st.executeQuery();
            boolean cek = true;
            while(rs.next()){
                cek = false;
                JOptionPane.showMessageDialog(this, "Jadwal Tidak Tersedia!");
                BSimpan.setEnabled(false);
            }

            if(cek){
                cekquota();
                
            }

        } catch (ClassNotFoundException cnfe) {
            System.out.println("Class Driver tidak ditemukan.. : " + cnfe);
            System.exit(0);
        } catch (SQLException sqle) {
            System.out.println("Proses Query Gagal = " + sqle);
            System.exit(0);
        } catch(Exception e){
            System.out.println("Koneksi Access Gagal " +e.getMessage());
            System.exit(0);
        }
    }

    private void setJTable2() {
   String [] JudulKolom={"No","Kode Matpel","Nama Matpel","Nama Guru"};
    tabModel2 = new DefaultTableModel(null, JudulKolom){
                  boolean[] canEdit = new boolean [] { false, false, false, false, false };
                  @Override
                  public boolean isCellEditable(int rowIndex, int columnIndex) {
                   return canEdit [columnIndex];
                  }
              };
    TMatPel.setModel(tabModel2);
    TMatPel.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
    TMatPel.getColumnModel().getColumn(0).setPreferredWidth(30);
    TMatPel.getColumnModel().getColumn(1).setPreferredWidth(100);
    TMatPel.getColumnModel().getColumn(2).setPreferredWidth(150);
    TMatPel.getColumnModel().getColumn(3).setPreferredWidth(150);

    getData2();
    }

    private void getData2() {
       try{
        Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");

        conn=DriverManager.getConnection("jdbc:odbc:akademik_smppgri2bdg");

        String sql="Select * from user where Jabatan = 'Guru'";
        PreparedStatement st=conn.prepareStatement(sql);

        ResultSet rs=st.executeQuery();

        String kode_mata_pelajaran,nama_mata_pelajaran,nama_guru;
        int no=0;
        while(rs.next()){
         no=no+1;
         kode_mata_pelajaran = rs.getString("kode_mata_pelajaran");
         nama_mata_pelajaran = rs.getString("nama_mata_pelajaran");
         nama_guru = rs.getString("nama_guru");
         Object [] Data = {no,kode_mata_pelajaran,nama_mata_pelajaran,nama_guru};
         tabModel2.addRow(Data);
        }

          st.close();
          conn.close();
    }
    catch (ClassNotFoundException cnfe) {
           System.out.println("Class Driver tidak ditemukan.. : " + cnfe);
           System.exit(0);
    }
    catch (SQLException sqle) {
           System.out.println("Proses Query Gagal = " + sqle);
           System.exit(0);
    }
    catch(Exception e){
           System.out.println("Koneksi Access Gagal " +e.getMessage());
           System.exit(0);
    }
}

    private void cekquota() {
        try{
            String kodePilih = txtKodeMatpel.getText();
                String kelasPilih = CBKelas.getSelectedItem().toString();
                String hariPilih = CBHari.getSelectedItem().toString();
                String jamPilih = CBJamMasuk.getSelectedItem().toString();

            Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
            conn=DriverManager.getConnection("jdbc:odbc:akademik_smppgri2bdg");
            String sql="select * from jadwal where hari = ? and nama_kelas = ? and kode_mata_pelajaran = ?";
            PreparedStatement st=conn.prepareStatement(sql);
            st.setString(1, hariPilih);
            st.setString(2, kelasPilih);
            st.setString(3, kodePilih);
            ResultSet rs=st.executeQuery();
            boolean cek = true;
            while(rs.next()){
                cek = false;
                JOptionPane.showMessageDialog(this, "Jadwal Mata Pelajaran ini Sudah Penuh!");
                BSimpan.setEnabled(false);
            }

            if(cek){
                JOptionPane.showMessageDialog(this, "Jadwal Tersedia");
                BSimpan.setEnabled(true);
            }

        } catch (ClassNotFoundException cnfe) {
            System.out.println("Class Driver tidak ditemukan.. : " + cnfe);
            System.exit(0);
        } catch (SQLException sqle) {
            System.out.println("Proses Query Gagal = " + sqle);
            System.exit(0);
        } catch(Exception e){
            System.out.println("Koneksi Access Gagal " +e.getMessage());
            System.exit(0);
        }
    }
}

