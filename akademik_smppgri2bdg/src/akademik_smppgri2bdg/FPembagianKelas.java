/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * FPembagianKelas.java
 *
 * Created on 26 May 14, 19:45:38
 */

package akademik_smppgri2bdg;


import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.JTable;


/**
 *
 * @author syadam
 */
public class FPembagianKelas extends javax.swing.JFrame {
    public DefaultTableModel tabModel;
    Connection conn;
    /** Creates new form FPembagianKelas */
    public FPembagianKelas() {
        initComponents();
        setJTable();
    jumlahsiswa();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtTahunAjaran = new javax.swing.JTextField();
        txtJumlahSiswaBaru = new javax.swing.JTextField();
        txtQuotaKelas = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TKelas = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Form Pembgian Kelas");
        setBackground(new java.awt.Color(204, 204, 255));

        jLabel4.setText("Tahun Ajaran");

        jLabel5.setText("Jumlah Siswa Baru");

        jLabel6.setText("Jumlah Kelas Tersedia");

        txtJumlahSiswaBaru.setEnabled(false);

        txtQuotaKelas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtQuotaKelasKeyTyped(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gambar/save kls.png"))); // NOI18N
        jButton1.setText("Bagi Kelas");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        TKelas.setBackground(new java.awt.Color(255, 255, 204));
        TKelas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(TKelas);

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gambar/close.png"))); // NOI18N
        jButton2.setText("Keluar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 322, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel4)
                                .addComponent(jLabel6)
                                .addComponent(jLabel5))
                            .addGap(32, 32, 32)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtQuotaKelas)
                                .addComponent(txtJumlahSiswaBaru)
                                .addComponent(txtTahunAjaran, javax.swing.GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(107, 107, 107))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtTahunAjaran, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtJumlahSiswaBaru, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtQuotaKelas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton1)
                            .addComponent(jButton2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try {
            Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
            Connection conn=DriverManager.getConnection("jdbc:odbc:akademik_smppgri2bdg");
            String sql ="Select * from kelas WHERE tahun_ajaran ='" + txtTahunAjaran.getText() + "'";
            PreparedStatement st = conn.prepareStatement(sql);
            ResultSet rs =st.executeQuery();
            if (rs.next()) {
                JOptionPane.showMessageDialog(this, "Tahun ajaran telah terdaftar !");
                st.close();
                conn.close();
                return;
            }
        }
        catch (ClassNotFoundException cnfe) {
           System.out.println("Class Driver tidak ditemukan.. : " + cnfe);
        }
        catch (SQLException sqle) {
           System.out.println("Input  Gagal = " + sqle.getMessage());
        }
        
        int jumlah_perkelas = Integer.valueOf(txtJumlahSiswaBaru.getText())/Integer.valueOf(txtQuotaKelas.getText());
        int sisa = Integer.valueOf(txtJumlahSiswaBaru.getText())%Integer.valueOf(txtQuotaKelas.getText());

        for(int i=1;i<=Integer.valueOf(txtQuotaKelas.getText());i++){
            try{
            Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
            conn=DriverManager.getConnection("jdbc:odbc:akademik_smppgri2bdg");
            String sql="Insert into kelas values(?,?,?)";
            PreparedStatement st=conn.prepareStatement(sql);
                st.setString(1, txtTahunAjaran.getText());
                if (sisa!=0 && i==Integer.valueOf(txtQuotaKelas.getText()))
                {
                st.setString(2, String.valueOf(jumlah_perkelas + sisa));
                }
                else
                {
                st.setString(2, String.valueOf(jumlah_perkelas));
                }
                st.setString(3, "X "+i);
            int rs=st.executeUpdate();

            if(rs>0){
            JOptionPane.showMessageDialog(this,"Input Berhasil");
      	    tampilDataKeJTable();
            }
            st.close();
            conn.close();
        }
        catch (ClassNotFoundException cnfe) {
           System.out.println("Class Driver tidak ditemukan.. : " + cnfe);
        }
        catch (SQLException sqle) {
           System.out.println("Input  Gagal = " + sqle.getMessage());
        }
        catch(Exception e){
           System.out.println("Koneksi Gagal " +e.getMessage());
        }
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void txtQuotaKelasKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtQuotaKelasKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (!((c >= '0') && (c <= '9') && txtQuotaKelas.getText().length() < 15
                || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE))) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_txtQuotaKelasKeyTyped
public void tampilDataKeJTable() {
    hapusIsiJTable();
    try {
        conn.close();
        Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
        conn=DriverManager.getConnection("jdbc:odbc:akademik_smppgri2bdg");
        String sql="Select * from kelas";
        PreparedStatement st=conn.prepareStatement(sql);
        ResultSet rs=st.executeQuery();
        String tahun_ajaran,jumlah_siswa,nama_kelas;
        int no=0;
        while(rs.next()){
         no=no+1;
         tahun_ajaran=rs.getString("tahun_ajaran");
         jumlah_siswa=rs.getString("jumlah_siswa");
         nama_kelas=rs.getString("nama_kelas");

         Object Data[]={no,tahun_ajaran,jumlah_siswa,nama_kelas};
         tabModel.addRow(Data);
      }
  }
    catch (Exception e) {}
}

public void hapusIsiJTable() {
    int row = tabModel.getRowCount();
    for (int i = 0; i < row; i++) {
      tabModel.removeRow(0);
    }
  }
    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FPembagianKelas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TKelas;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtJumlahSiswaBaru;
    private javax.swing.JTextField txtQuotaKelas;
    private javax.swing.JTextField txtTahunAjaran;
    // End of variables declaration//GEN-END:variables

    private void getData(){

  try{
        Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");

        conn=DriverManager.getConnection("jdbc:odbc:akademik_smppgri2bdg");

        String sql="Select * from kelas";
        PreparedStatement st=conn.prepareStatement(sql);

        ResultSet rs=st.executeQuery();

        String tahun_ajaran,jumlah_siswa,nama_kelas;
        int no=0;
        while(rs.next()){
         no=no+1;
         tahun_ajaran=rs.getString("tahun_ajaran");
         jumlah_siswa=rs.getString("jumlah_siswa");
         nama_kelas=rs.getString("nama_kelas");
         Object [] Data = {no,tahun_ajaran,jumlah_siswa,nama_kelas};
         tabModel.addRow(Data);
        }

          st.close();
          conn.close();
    }
    catch (ClassNotFoundException cnfe) {
           System.out.println("Class Driver tidak ditemukan.. : " + cnfe);
           System.exit(0);
    }
    catch (SQLException sqle) {
           System.out.println("Proses Query Gagal = " + sqle);
           System.exit(0);
    }
    catch(Exception e){
           System.out.println("Koneksi Access Gagal " +e.getMessage());
           System.exit(0);
    }

    }

private void setJTable(){
    String [] JudulKolom={"No","Tahun Ajaran","Jumlah Siswa","Nama Kelas"};
    tabModel = new DefaultTableModel(null, JudulKolom){
                  boolean[] canEdit = new boolean [] { false, false, false, false };
                  @Override
                  public boolean isCellEditable(int rowIndex, int columnIndex) {
                   return canEdit [columnIndex];
                  }
              };
    TKelas.setModel(tabModel);
    TKelas.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
    TKelas.getColumnModel().getColumn(0).setPreferredWidth(30);
    TKelas.getColumnModel().getColumn(1).setPreferredWidth(100);
    TKelas.getColumnModel().getColumn(2).setPreferredWidth(100);
    TKelas.getColumnModel().getColumn(3).setPreferredWidth(100);

    getData();
}

    private void jumlahsiswa() {
        try
        {
         Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");

        conn=DriverManager.getConnection("jdbc:odbc:akademik_smppgri2bdg");

        String sql="SELECT COUNT(nis) as jumlah from siswa";
        PreparedStatement st=conn.prepareStatement(sql);

        ResultSet rs=st.executeQuery();
        
        while(rs.next()){
         txtJumlahSiswaBaru.setText(rs.getString("jumlah"));
        }
    }
    catch (ClassNotFoundException cnfe) {
           System.out.println("Class Driver tidak ditemukan.. : " + cnfe);
           System.exit(0);
    }
    catch (SQLException sqle) {
           System.out.println("Proses Query Gagal = " + sqle);
           System.exit(0);
    }
    catch(Exception e){
           System.out.println("Koneksi Access Gagal " +e.getMessage());
           System.exit(0);

        }
    }
}
